布局：
1容器里面放的组件必须用东西包起来
2监听点击时间调用的方法
3 引入路由的东西
4 <script>
import..from'路径'；  必须引入想要的模块或者组件还有路由
export default{}  即导出这个组件，外部可以引用。
导出的内容有组件components：已经注册好的组件值名
组件的计算属性computed：



视频教学：
1 <style scoped>指当前的样式
2 export default{
name：‘当前文档’
} 导出

主页面：
引入组件 import 当前文档 from‘./components/test’
然后在组件components:{name名字为健名 } 就可以使用组件了！
用页面弄成组件。
<script>
       export default{
name:'test',
data(){name下面就是方法
return返回内容{
title:'hello Vues,js'
返回值就是模块绑定 双花括号{{}}
}
}
</script>

绑定对象的方法：获取数据
user:{a:1,b:2}
<p>{{user.a}}</p> 获取对象的第一种方法
<p v-text=''user.a></p> 第二种方法就是通过指令来获取
v-text和{{}}一样
v-text不解释标签，v-html解释标签
解释html标签可能导致xss攻击，不要使用用户提供的内容插值

------------------------------------------------------------------------------------------------
v-if来判断到底是否展示内容 要想有条件 必须有值
data里面的值show：true/false
语句<p v-if='show'>为对就出现
<p v-else>同步
------------------------------------------------------------------------------------------------
v-for:遍历出来
items:[a:1,b:2]
<li v-for='li in items'>{{li.title}}</li>

------------------------------------------------------------------------------------------------
v-on:点击事件
绑定点击事件 绑定好之后必须要有方法
在方法定义一个methods：{
oncklic：function（）{ alert（aa）}
}
这里有个基础就是利用传参来控制里面的值
button v-on:click='nb(wo shi da sb)'
比如 greet：function（NB）{alert(NB)}
------------------------------------------------------------------------------------------------
键盘事件：v-on:keyup='pressKey'||v-on:keyup.enter='pressKey'
监听按enten键时发生的方法
所有的方法在methods里面写
所有的数据在data里面写
想要什么方法就在方法里面写什么东西

------------------------------------------------------------------------------------------------
computed:计算属性
调用方法同时添加方法！！
full：function（）{
return this.user.a+""+this.user.b 
}
------------------------------------------------------------------------------------------------
props属性 传入数据：对象
专门的属性值：非常重要的东西
在props：里面定义{msg：{type:string,}}
default:默认就是当前这些文字必须是什么类型


                        
